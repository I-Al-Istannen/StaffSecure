# suppress inspection "UnusedProperty" for whole file
# @formatter:off

# +---------------------+
# |                     |
# |      IMPORTANT      |
# |     INFORMATION     |
# |                     |
# +---------------------+

# Color codes are supported using the ampersand ('&') as color char.
# If you want to write an apostrophe (') in the message, you need to use two of them ('')
# You can specify a special format for some things like numbers, dates, percentages and other things.
#     You can find all of them here: https://docs.oracle.com/javase/8/docs/api/java/text/MessageFormat.html
# You can refer to other keys by using this notation: [[path.to.other.key]]
# This means, that "&cPrefix: [[prefix]]" will always display the prefix set in the language file. This allows for some neat contraptions such
# as embedding the usage of a command. Look at "status.not.registered" for example.

# Bug reports or feature requests are welcome, I can't make any promises though

# +-----------------------+
# |                       |
# |        GENERAL        |
# |                       |
# +-----------------------+

# The prefix for all (most) messages
prefix= '&8[&7&oStaff&a&l&oSecure&8]&r  '


# +----------------------+
# |                      |
# |        STATUS        |
# |                      |
# +----------------------+

# Send when you are not registered and try to use some commands
status.not.registered= &cYou are not registered. Use [[command.register.usage]] &cfirst.
# Send when you are not logged in and try to use some commands
status.not.logged.in= &cYou are not registered. Use [[command.register.usage]] &cfirst.
# Send when the user is already logged in
status.already.logged.in= &cYou are already logged in...


# +-----------------------+
# |                       |
# |         LOGIN         |
# |                       |
# +-----------------------+

# Send when you successfully logged in
command.login.successfully.logged.in= &7&k|;:|&a  Successfully logged in.  &7&k|;:|
# Send when your password is incorrect
command.login.password.incorrect= &cThe password is incorrect. Try again.


# +----------------------+
# |                      |
# |       REGISTER       |
# |                      |
# +----------------------+

# Send when you are already registered
command.register.already.registered= &cYou are already registered.
# Send when you have successfully registered
command.register.successfully.registered= &aSuccessfully registered!\
  \n&6Use [[command.login.usage]] &6to login.


# +----------------------+
# |                      |
# |   CHANGE PASSWORD    |
# |                      |
# +----------------------+

# Send when you changed your password
# Placeholder: {0} ==> The new password
command.change.password.changed.password= &6Changed your password to ''&a{0}&6''.


# +-----------------------+
# |                       |
# |        GET PIN        |
# |                       |
# +-----------------------+

# Send if the user tries to generate a second token
command.get.pin.token.already.generated= &cYou already generated a token!
# Send to the console when a token is generated
# Placeholder: {0} ==> The token, {1} ==> The player who generated it.
command.get.pin.console.token= \
  \n&3===========================================\
  \n   &6Player ''&a{1}&6'' generated a Token \
  \n         &6The token is ''&a{0}&6''.\
  \n&3===========================================
command.get.pin.player.token.generated= &6A token was generated for you. Talk to an administrator to get it.

# +-----------------------+
# |                       |
# |      REDEEM PIN       |
# |                       |
# +-----------------------+

# Send if the user tries to redeem an invalid token
# Placeholder: {0} ==> The token the user tried to enter
command.redeem.pin.incorrect.token= &cThe token ''&a{0}&c'' is invalid.
# Send when the password was changed
# Placeholder: {0} ==> The new password
command.redeem.pin.password.changed.password= &6Changed your password to ''&a{0}&6''.


# +-----------------------+
# |                       |
# |       PRE-LOGIN       |
# |                       |
# +-----------------------+

# Send when the user tried to interact (hit, use, place, break, any click) and is not logged in.
not.logged.in.prevented.interact= &cYou are not logged in. Use [[command.login.usage]]&c.
# Send when the user tried to move and is not logged in.
not.logged.in.prevented.move= &cYou are not logged in. Use [[command.login.usage]]&c.
# Send when the user tried to chat and is not logged in.
not.logged.in.prevented.chat= &cYou are not logged in. Use [[command.login.usage]]&c.
# Send when the user tried to execute a command and is not logged in.
# Placeholder: {0} ==> The name of the command
not.logged.in.prevented.command= &cYou are not logged in. Use [[command.login.usage]]&c.


# +----------------------+
# |                      |
# |       COMMANDS       |
# |                      |
# +----------------------+

# The name of the command
command.main.name= Staff Secure
# The keyword of the command. Uses in tab-complete
command.main.keyword= staffsecure
# The pattern the keyword must match. It is a regular expression, so you can define and alias using "|<alias>" without the angle brackets
command.main.keyword.pattern= staffsecure
# The usage
command.main.usage= &a/staffSecure &3help <password>
# A brief description of the command
command.main.description= &7The main command for Staff Secure

command.login.name= Login
command.login.keyword= login
command.login.keyword.pattern= login
command.login.usage= &a/staffSecure &3login <password>
command.login.description= Lets you login

command.register.name= Register
command.register.keyword= register
command.register.keyword.pattern= register
command.register.usage= &a/staffSecure &3register <password>
command.register.description= Lets you register

command.change.password.name= Change Password
command.change.password.keyword= changePassword
command.change.password.keyword.pattern= changePassword|changePw
command.change.password.usage= &a/staffSecure &3changePassword <new password>
command.change.password.description= &7Lets you change your password

command.get.pin.name= Get Pin
command.get.pin.keyword= getPin
command.get.pin.keyword.pattern= getPin
command.get.pin.usage= &a/staffSecure &3getPin
command.get.pin.description= &7Gives you a pin to recover your password.

command.redeem.pin.name= Redeem Pin
command.redeem.pin.keyword= pin
command.redeem.pin.keyword.pattern= redeemPin|pin
command.redeem.pin.usage= &a/staffSecure &3pin <pin> <new password>
command.redeem.pin.description= &7Checks the pin and let's you reset your password

command.help.name= Help
command.help.keyword= help
command.help.keyword.pattern= help
command.help.usage= &a/staffSecure &3help
command.help.description=&7The help command